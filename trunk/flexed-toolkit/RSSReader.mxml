<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
// *Copyright (c) 2006 Uday M. Shankar
//
// The usual Yada-Yada!
//
// Permission is hereby granted, free of charge, to any person
// obtaining a copy of this code and associated documentation
// files (the "Code"), to deal in the Code without
// restriction, including without limitation the rights to use,
// copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the
// Code is furnished to do so, subject to the following
// conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Code.
//
// THE CODE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
// OTHER DEALINGS IN THE SOFTWARE.
//
// Further it is worth to mention that no animals have been 
// harmed during the development. No trees have been cut 
// down. Womens rights have been treated with full respect.
// Mankind's safety has been ensured at every step.
//
// Peace!
//
// @file: RSSReader
// @author: Uday M. Shankar
// @date: 23-12-2006
// @description: sample implmentation of the CustomGrid.
//
////////////////////////////////////////////////////////////////////////////////
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:grid="flexed.widgets.grid.*" initialize="initGrid()"  backgroundColor="#ffffff">
<mx:HTTPService id="httpRSS" url="{ rssURL }" resultFormat="object" fault="onFault(event)" result="onSuccess(event)" />

<mx:Script>
	<![CDATA[
		import flexed.widgets.grid.linkRenderer;
		import mx.rpc.events.FaultEvent;
		import mx.controls.dataGridClasses.DataGridColumn;
		import mx.controls.Alert;
		import mx.collections.ArrayCollection;

        import mx.formatters.DateFormatter;
        import flash.net.navigateToURL;
        import mx.collections.ArrayCollection;
        import mx.rpc.events.ResultEvent;

        [Bindable]
        private var rssURL:String = "http://weblogs.macromedia.com/mxna/xml/rss.cfm?query=byCategory&languages=1&categoryId=5";
        
		
		/**
		* Columns for the grid.
		* Note the use of formatDate 
		* function for the date column.
		*/
		public var gridColumns:ArrayCollection= new ArrayCollection([
						{colname:"Post Date",colwidth:"100",coldata:"date", labelfunction:formatDate},
						{colname:"Post Author",colwidth:"250",coldata:"creator"},
						{colname:"Post Title",coldata:"title",renderer: flexed.widgets.grid.linkRenderer},
						{colname:"Post Link",coldata:"link",hide:true},
						{colname:"Post Comments",coldata:"comments",hide:true}
						]);

		/**
		* Retrieve data from the RSS feed and load
		* the results into the grid.
		*/        
        private function onSuccess(event:ResultEvent):void {
        	if(event == null){
        		Alert.show("No feeds retrieved.");
        		myDataGrid.statusBar.text = "Feeds unavailable. Some Problem. Please retry later.";
        	}else{
            var tmp:Object = event.result.RDF.item;
            var items:ArrayCollection = new ArrayCollection();
            for( var i:String in tmp ) {
                items.addItem( tmp[i] );
            }
            myDataGrid.loadData(items);
            myDataGrid.statusBar.text = "Feeds loaded.";
         }
       }

		/**
		* Retrieve data from the RSS feed and load
		* the results into the grid.
		*/        
        private function onFault(event:FaultEvent):void {
    		Alert.show("No feeds retrieved. \n\n["+event+"]","HTTPService Request Failed.");
    		myDataGrid.statusBar.text = "HTTPService Failed. Try again after some time.";
       }

		/**
		* Format Date. Used in the datagrid for 
		* formatting the date recieved from the feed.
		*/       
        private function formatDate(item:Object, col:DataGridColumn):String {
        	var date:String = item.date.toString();
            var df:DateFormatter = new DateFormatter();
            df.formatString = "DD.MM.YYYY";
            return df.format(date);
        }
		
		/**
		* The init method which sends the RSS request 
		* and also prepares the grid for the results.
		*/
		private function initGrid():void{
			myDataGrid.statusBar.text = "Fetching feed data... Please wait...";
			httpRSS.send();
			myDataGrid.drawColumns(gridColumns);
	    }
			
	]]>
</mx:Script>
		<grid:CGrid id="myDataGrid" printTitle="Blog Posts from MXNA [RSS Reader]" searchType="filter" allowPrint="false" />
</mx:Canvas>
